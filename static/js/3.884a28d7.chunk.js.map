{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPostsForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/StatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likes","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","TextareaForPost","validate","required","placeholder","MyPosts","postElements","posts","map","likesCount","postsBlcok","values","addPost","newtPost","MyPostContainer","connect","state","profilePage","postData","newPostText","dispatch","addPostActionCreator","StatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","Preloader","contacts","contactsArray","Object","entries","descriptionBlock","photos","large","fullName","contact","Profile","window","scrollTo","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","setProfile","React","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.884a28d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlcok\":\"MyPosts_postsBlcok__1itXU\",\"posts\":\"MyPosts_posts__3pDe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1awq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__17A9x\"};","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://cdn.shopify.com/s/files/1/1566/2889/articles/keanu-reeves-portada_2048x.progressive.jpg?v=1625562669\" alt=\"avatar\"/>\r\n      {props.message}\r\n      <div>\r\n        <span>Likes: {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { TextareaForPost } from \"../../Common/FormsControllers/FormsControllers\"; \r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field name=\"newtPost\" component={TextareaForPost} validate={[required, maxLength10]} placeholder=\"Post message\"/>\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const AddNewPostReduxForm = reduxForm({\r\n    form: 'AddNewPostForm'\r\n  })(AddNewPostForm);\r\n\r\nexport default AddNewPostReduxForm;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostReduxForm from \"./MyPostsForm\";\r\n\r\nconst MyPosts = (props) => {\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newtPost);\r\n  };\r\n\r\n  let postElements = props.posts.map((message) => (\r\n    <Post message={message.message} likes={message.likesCount} />\r\n  ));\r\n \r\n\r\n  return (\r\n    <div className={classes.postsBlcok}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import {\r\n  addPostActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input onBlur={deactivateEditMode} onChange={onStatusChange} value={status} autoFocus={true} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default StatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport StatusWithHooks from \"./StatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  let contacts = props.profile.contacts;\r\n  let contactsArray = Object.entries(contacts);\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt=\"UserPhoto\" />\r\n        <StatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <p>{props.profile.fullName}</p>\r\n        <ul>\r\n          {contactsArray.map((contact) => {\r\n            return <li>{contact}</li>;\r\n          })}\r\n        </ul>\r\n        Avatar + description\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { useEffect } from 'react';\r\n\r\nconst Profile = (props) => {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProfile, setStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.setProfile(userId);\r\n    this.props.setStatus(userId);\r\n  }\r\n\r\n  render() {\r\n     return <Profile {...this.props} />;\r\n    \r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {setProfile, setStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, {\r\n//   setProfile,\r\n// })(WithUrlDataContainerComponent);\r\n"],"sourceRoot":""}